language: rust

rust:
- 1.41.1

os:
- linux

services: docker

env:
  - TARGET=x86_64-unknown-linux-gnu
  - TARGET=arm-unknown-linux-gnueabihf

before_install:
- |
  if [ "$TARGET" = "x86_64-unknown-linux-gnu" ]
  then
    rustup update nightly
    rustup target add ${TARGET}
    rustup target add wasm32-unknown-unknown --toolchain nightly
    rustup show
  else
    docker pull joystream/rust-raspberry
  fi
- rustup component add rustfmt

before_scripts:
  - cargo fmt --all -- --check

script:
- |
  if [ "$TARGET" = "x86_64-unknown-linux-gnu" ]
  then
    cargo build --release --target=${TARGET}
    export FILENAME="joystream-node-x86_64-linux-gnu"
  else
    docker run \
      --volume ${PWD}/:/home/cross/project \
      --volume ${HOME}/.cargo/registry:/home/cross/.cargo/registry \
      joystream/rust-raspberry \
      build --release
    export FILENAME="joystream-node-armv7-linux-gnueabihf"
  fi

before_deploy:
  - mv ./target/${TARGET}/release/joystream-node .
  - tar -cf ${FILENAME}.tar ./joystream-node
  - gzip ${FILENAME}.tar

deploy:
  provider: releases
  api_key:
    secure: ZoEXp8g+yZOEG8JZ1Fg6tWnW3aYDfupFbZflEejYaAdXhj1nw7G9N10ZX5VDdb/O1iFx8BhfFymQxk0ynxNC8c52LzOjKIhXEporxgvEPdnoPS/N1JhfsOUV0ragwZDLv2tFVi2AT0K4w8WJFJDzrK4qHOMMQgVbVQZtFmDL1whHdfBD5FyFyKmMdZdWBtTGy4s7X0LnmxjNB4/3AMa540T3LowZ5H66MYZkQmAbtg8ib93WomVanhS23vbjNaH9x1Kmzxd2B3pCSgI8uaxBrpmzINvAeSusYVJQt0EF/cAPXmq0+JmGoocvcS1ecg/SNZoKUNmeElB4ns/obg/QAyE+fyQtyl+iDYBilhFLm5xRMUnqkpyeUUD3u824i/Z+/tfLvtm5Egg1QAiXtIIJMeAj1nN8OIeSlHR4phnSTA3jl2PZw9QYidtV9WCqHC0qxtpkYSKkC8ItaefScPB1AuvOvVx8xvnIxfR/tXvL8Y3Y2BvhiLgpky9JkbdMln1b0m0E5c4vyGCEVqHqpbxM63VJkpct8sVx0atGvipWEelVjz5XpkxW2PYbgg4EKUzl3FiYcXwf5Y/ykxaZNZt7I4gv9nz2KkVwUCCPqdwWF7ww1shFWW5tCoCmJuUESOdPFx0jQ7LVWz7SDLDsqvvaW2c2OPxG6DIx9BiTeAE4qIQ=
  file: "${FILENAME}.tar.gz"
  skip_cleanup: true
  draft: true
  prerelease: true
  overwrite: true
  on:
    repo: mnaamani/substrate-node-joystream
    branch: deploy


